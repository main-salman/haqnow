# FOI Archive Cursor Rules - HaqNow.com Project

## üöÄ DEPLOYMENT WORKFLOW (MANDATORY)

### 1. ALWAYS USE DEPLOY.SH FOR DEPLOYMENT
- **NEVER** deploy manually via rsync, scp, or other methods. Commands can be run on the server directly but code changes must be managed via git
- **ALWAYS** use `./deploy.sh` script for all deployments to exoscale server
- The deploy.sh script handles frontend build, backend sync, and service restart
- Make sure .env is copied between local and server upon every time deploy.sh is run

### 2. CODE CHANGES WORKFLOW
```
Local Development ‚Üí GitHub Push ‚Üí deploy.sh ‚Üí Exoscale Server
```
- **NEVER** edit code directly on the server
- **ALL** code changes must go through GitHub first
- Commands can be run on server for debugging/testing only
- Use `git pull` on server only through deploy.sh script

### 3. ENVIRONMENT FILE MANAGEMENT
- Local `.env` file is the source of truth
- Copy `.env` from local to exoscale server when environment changes needed
- **NEVER** edit `.env` directly on server
- Command: `scp .env root@159.100.250.145:/opt/foi-archive/backend/.env`

## üîç TESTING REQUIREMENTS (MANDATORY AFTER EACH DEPLOYMENT)

### 1. FRONTEND TESTING CHECKLIST
```bash
# Test these URLs after deployment:
- https://www.haqnow.com/          # Homepage loads
- https://www.haqnow.com/search   # Search page works
- Country dropdown appears and functions
- Document search returns results
- Document clicking navigates to detail page
```

### 2. BACKEND API TESTING CHECKLIST  
```bash
# Test these endpoints after deployment:
curl -s "https://www.haqnow.com/api/statistics/country-stats" | jq
curl -s "https://www.haqnow.com/api/search/search?q=test&per_page=10" | jq
curl -s -X POST "https://www.haqnow.com/api/rag/question" -H "Content-Type: application/json" -d '{"question": "test"}' | jq
curl -s -X POST "https://www.haqnow.com/api/rag/process-document" -H "Content-Type: application/json" -d '{"document_id": 33}' | jq
```

### 3. AI FUNCTIONALITY TESTING
- Test AI search box with Enter key
- Verify AI returns real document summaries (not generic responses)  
- Check that clicking Egyptian documents leads to correct pages
- Confirm document download functionality works

## üõ†Ô∏è DEVELOPMENT STANDARDS

### 1. GIT WORKFLOW
- Always commit changes locally first
- Write descriptive commit messages
- Handle GitHub secrets/protection issues properly
- Never force push or bypass security

### 2. ERROR HANDLING
- All API endpoints must have proper error handling
- Database connection issues should be logged and handled gracefully
- Import errors (like googletrans) must be wrapped in try-catch blocks

### 3. ENVIRONMENT VARIABLES
- All secrets must be in `.env` file (NEVER hardcoded)
- Database URLs, API keys, passwords stored securely
- Use `os.getenv()` with fallback values where appropriate

## üö® CRITICAL ISSUES TO PREVENT RECURRING

### 1. BACKEND STARTUP ISSUES
- Always test backend starts without crashes
- Check for import errors (googletrans, httpcore compatibility)
- Verify database connections work with current credentials
- Ensure all routers are properly mounted in main.py

### 2. RAG/AI FUNCTIONALITY  
- RAG processing endpoints must be accessible (/rag/process-document)
- Documents must be properly indexed for AI to provide real summaries
- Frontend must call correct API endpoints (/api/rag/question)

### 3. DEPLOYMENT CONSISTENCY
- Use deploy.sh for ALL deployments
- Always test thoroughly after deployment
- Verify both frontend and backend functionality
- Check live domain (haqnow.com) not just localhost

## üìã PRE-DEPLOYMENT CHECKLIST

Before running `./deploy.sh`:
- [ ] All changes committed and pushed to GitHub
- [ ] Local tests pass
- [ ] .env file updated if needed
- [ ] No hardcoded secrets in code
- [ ] All imports properly handled with try-catch

After running `./deploy.sh`:
- [ ] Frontend loads at https://www.haqnow.com
- [ ] Backend health check passes
- [ ] Search functionality works
- [ ] AI functionality provides real responses
- [ ] Document downloads work
- [ ] No console errors in browser

## üîÑ COMMON COMMANDS

### Deploy to Production
```bash
./deploy.sh
```

### Copy Environment File to Server
```bash
scp backend/.env root@159.100.250.145:/opt/foi-archive/backend/.env
```

### Test Backend Health
```bash
curl -s "https://www.haqnow.com/api/health" | jq
```

### Debug Server Issues
```bash
ssh root@159.100.250.145 "cd /opt/foi-archive/backend && tail -f /tmp/backend.log"
```

---

**Remember**: Following these rules prevents the recurring deployment and functionality issues. Always test thoroughly after each deployment!
