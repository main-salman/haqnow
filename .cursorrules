# ü§ñ Cursor Rules for HaqNow Development

## üìñ ESSENTIAL READING
- **ALWAYS read CURSOR_CONTEXT.md first** before making assumptions about file locations or workflows
- **Check documentation/ folder** for detailed guides before extensive codebase searching

## üóÇÔ∏è FILE LOCATION SHORTCUTS
- Environment vars: `.env` (repo root) - contains ALL credentials
- AI/RAG service: `backend/app/services/rag_service.py`
- Deployment: `scripts/deploy.sh` (ONLY deployment method)
- Frontend AI: `frontend/src/components/RAGQuestionAnswering.tsx`

## üöÄ DEPLOYMENT RULES (CRITICAL)
- **NEVER manually deploy** - always use `./scripts/deploy.sh [patch|minor|major]`
- **NEVER duplicate deploy.sh tasks** - it handles git, SSH, service restarts
- **deploy.sh includes**: git commit/push, server sync, .env copying, service restarts
- If suggesting deployment steps, simply say: "Run `./scripts/deploy.sh patch` to deploy these changes"

## üíæ DATABASE CONFIGURATION
- **Primary DB**: MySQL (Exoscale DBaaS) - connection in .env as DATABASE_URL
- **RAG DB**: PostgreSQL + pgvector (Exoscale DBaaS) - connection in .env as POSTGRES_RAG_URI
- **NEVER search for local DB config** - all databases are hosted (Exoscale)
- **Credentials**: Always reference .env file, never hardcode

## üîç DEBUGGING WORKFLOW
Before extensive debugging, try these standard commands:
1. `curl -s "https://www.haqnow.com/api/health"` - backend health
2. `curl -s "https://www.haqnow.com/api/rag/status"` - AI system status  
3. `ssh root@159.100.250.145 "tail -f /tmp/backend.log"` - server logs

## üéØ OPTIMIZATION RULES
- **File searches**: Check CURSOR_CONTEXT.md locations first before using codebase_search
- **Architecture questions**: Reference documentation/ folder before analyzing code
- **Environment setup**: Always assume .env (root) contains all required variables
- **AI/RAG issues**: Check RAG status endpoint before diving into code

## üõ†Ô∏è DEVELOPMENT WORKFLOW
- **Changes made**: Deploy using `scripts/deploy.sh [type]`
- **Bug fixes**: `scripts/deploy.sh patch`
- **New features**: `scripts/deploy.sh minor`
- **Breaking changes**: `scripts/deploy.sh major`

## üîí SECURITY REMINDERS
- All credentials in .env file (gitignored)
- Never commit secrets to git
- deploy.sh syncs .env between local and server
- Production domain: https://www.haqnow.com

## üìÇ PROJECT ORGANIZATION
- `scripts/` - All deployment and utility scripts
- `documentation/` - All markdown documentation  
- `backend/` - FastAPI Python application
- `frontend/` - React TypeScript application
- `.env` - Environment variables (root level)

## ü§ñ AI/RAG SPECIFIC
- Models: Ollama (Llama3/phi3/gemma) + sentence-transformers
- Vector DB: PostgreSQL + pgvector extension
- Processing: Document chunking ‚Üí embeddings ‚Üí vector storage
- Frontend: Search page ‚Üí AI Q&A tab
- Performance: ~20-30 second response times expected

## üé≠ RESPONSE STYLE
- Prefer practical solutions over extensive analysis
- Reference existing files/tools before creating new ones
- Always suggest using deploy.sh for deployment
- Focus on .env configuration over searching for hardcoded values